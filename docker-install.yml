- become: yes # by setting become to yes, ansible knows to run commands as superuser
  hosts: all
  name: docker-install
  vars:
    container_count: 2
    default_container_name: docker
    default_container_command: sleep 1
    default_container_image: ubuntu

  tasks:
    - name: Add the user 'malmike' and add it to 'sudo'
      user:
        name: malmike
        group: sudo

    - name: Add SSH key to 'malmike'
      authorized_key:
        user: malmike
        state: present
        key: "{{ lookup('file', pub_key) }}"

    - name: Wait for apt to unlock
      become: yes
      shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;

    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - zip
        state: latest
        update_cache: true

    - name: Add Docker GPG apt key #Added to verify the download
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Wait for apt to unlock
      become: yes
      shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Wait for apt to unlock
      become: yes
      shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Wait for apt to unlock
      become: yes
      shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;

    - name: Install Docker Module for python3-pip
      pip:
        name: docker

    - name: Pull default Docker image
      community.docker.docker_image:
        name: "{{ default_container_image }}"
        source: pull

    - name: Create default containers
      community.docker.docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        command: "{{ default_container_command }}"
        state: present
      with_sequence: count={{ container_count }}
